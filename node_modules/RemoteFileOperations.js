/**
 * @author Jackie lin
 * @date 2014-4-1
 * @content remote file operation
 */

var ssh = require('SSHOpreation');

var RemoteFileOperation = function() {};

RemoteFileOperation.prototype.startSSH = function() {
    ssh.connection();
};

RemoteFileOperation.prototype.setConfiguration = function() {
    ssh.setHostConfiguration(arguments);
};

/**
 * connect to remote machine
 */
RemoteFileOperation.prototype.connect = function() {
    ssh.connection();
};

RemoteFileOperation.prototype.sshEnd = function() {
    ssh.sshEnd();
};

RemoteFileOperation.prototype.registerEvent = function(events, callbacks) {
    ssh.registerEvent(events, callbacks);
};

RemoteFileOperation.prototype.remoteMkdir = function(filepath, callback) {
    if(!filepath || !callback) {
        console.error('filepath and callback must be exists!!');
        return;
    }

    ssh.mkdir(filepath, callback);
};

/**
 * use scp to upload files
 * @param filepath
 * @param hostpath
 * @param callback
 */
RemoteFileOperation.prototype.scp = function(filepath, hostpath, callback) {
    ssh.scp(filepath, hostpath, callback);
};

RemoteFileOperation.prototype.instance = function() {
    ssh.instance();
};

RemoteFileOperation.prototype.setScpDefault = function() {
    ssh.setscpDefault();
};

RemoteFileOperation.prototype.scpmkdir = function(filepath, callback) {
    if(!filepath) {
        console.error('scpmkdir: filepath must be exists!!');
        return;
    }

    ssh.scpmkdir(filepath, callback);
};

RemoteFileOperation.prototype.scpClose = function(callback) {
    ssh.scpclose(callback);
};

RemoteFileOperation.prototype.executeCommand = function(command, callback) {
    ssh.executeCommand(command, callback);
};

module.exports = RemoteFileOperation;